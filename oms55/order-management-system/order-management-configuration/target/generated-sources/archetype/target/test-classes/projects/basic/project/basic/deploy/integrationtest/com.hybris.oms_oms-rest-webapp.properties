################################
#### DATA SOURCE PROPERTIES ####
################################ 

# Fully qualified name of the JDBC driver class used to access the database
dataSource.driverClass=org.hsqldb.jdbcDriver
# JDBC connection URL
dataSource.jdbcUrl=jdbc:hsqldb:mem:testDB
# Username to use for connection
dataSource.username=sa
# Password to use for connection
dataSource.password=

##########################
### MONGODB PROPERTIES ###
##########################

# Mongo database name
persistence.engine.mongodb.databaseName=oms-int

##########################
### KERNEL PROPERTIES ####
##########################

# Name of tenant which will be initialized during startup with property kernel.autoInitMode "create" or "create-drop"
# Tenant name for single tenant configuration.
kernel.defaultTenant=single
# Enables/Disables one tenant configuration (true/false), for single tenant property kernel.defaultTenant is required (true/false)
kernel.singleTenantMode=false

# Defines how system should be initialized
#     Possible values:
#       - ignore      : (recommended) No check during startup. Use init-app to initialize/update system
#       - create      : Will initialize system if not initialized or fail when not up to date.
#       - update      : Will initialize system if not initialized or update when not up to date.
#       - create-drop : Will drop schema (and ALL DATA) and then initialize system from scratch again.
kernel.autoInitMode=create-drop

# Enables/disables automatic flush invocation before query (true/false)
kernel.flushBeforeQuery=false

# Enables/Disables kernel cache (true/false)
kernel.cacheEnabled=false

# Name of bean which provides default SequenceService implementation
kernel.sequence.provider=jdbcPersistenceEngine
# Size of sequence cached numbers
kernel.sequence.cacheSize=500
# Number of attempts to get new number from sequence
kernel.sequence.maxAttempts=3

# Enables/disables initial scheduleable aggregations calculation after start (true/false)
kernel.aggregation.initialAggregation=true

# JGroups channel configuration
#     Possible values:
#          disable, skip   - skips configuration
#          enable, default - default configuration
#          <configuration string> - see jgroups documentation
kernel.events.cluster.jgroups.channel=disable

######################
### OMS PROPERTIES ###
###################### 

# Enables/disables the mock use for the CIS communications (true/false)
oms.business.test.enableMock=true
# Database type to be used by Activiti
#     Supported values: h2, mysql, oracle, mssql
oms.activiti.databaseType=h2

###########################
### PROVIDER PROPERTIES ###
###########################

# the zookeeper ensemble to connect to in the pattern: <host>:<port>(,<host>:<port>)* ==> eg: 127.0.0.1:2181
zookeeper.ensemble=localhost
# Service provider endpoint URL
hybris.server.url=http://localhost:8080
# Api key for creating signature
hybris.security.apiKey=myKey

serviceprovider.implementation=default
